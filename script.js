let lastMainScrollPosition = 0; document.addEventListener("DOMContentLoaded", (function () { const e = document.getElementById("main-content"), t = document.querySelectorAll('[id^="project"]'), o = document.querySelectorAll(".view-project-btn"), n = document.querySelectorAll(".back-to-main"), a = document.getElementById("mobile-nav"), r = document.querySelectorAll(".nav-mobile-link"), i = document.querySelectorAll(".nav-link"), s = e => { i.forEach((e => e.classList.remove("active-nav"))), r.forEach((e => e.classList.remove("active-icon"))); const t = e || "#about"; i.forEach((e => { e.getAttribute("href") === t && e.classList.add("active-nav") })), r.forEach((e => { e.getAttribute("href") === t && e.classList.add("active-icon") })) }, l = (o, n = !1, l = null, c = !1) => { "main-content" === o || n || window.scrollTo(0, 0), e.classList.remove("active"), t.forEach((e => e.classList.remove("active"))), "main-content" !== o && (i.forEach((e => e.classList.remove("active-nav"))), r.forEach((e => e.classList.remove("active-icon")))); let d = ""; if ("main-content" !== o && o) { const t = document.getElementById(o); t ? (t.classList.add("active"), a.classList.remove("hidden"), "project14" === o || "project15" === o ? setTimeout(initProjectCharts, 50) : "project1" === o && setTimeout(setupProject1Slider, 50), d = "#" + o) : (e.classList.add("active"), a.classList.remove("hidden"), s("#about"), o = "main-content", d = " ") } else if (o = "main-content", e.classList.add("active"), a.classList.remove("hidden"), c) setTimeout((() => { window.scrollTo({ top: lastMainScrollPosition, behavior: "auto" }), u.takeRecords(), u.observe(document.querySelector("#portfolio")) }), 0), d = "#portfolio"; else if (n) s(window.location.hash || "#about"), d = window.location.hash || " "; else { const e = l || "#about"; s(e), setTimeout((() => { const t = document.querySelector(e); t && t.scrollIntoView({ behavior: "smooth" }) }), 50), d = e } if (!n) { const e = "#about" === d || " " === d ? " " : d; history.pushState({ page: o, targetSection: l }, "", e) } }, c = window.location.hash; if (c && c.startsWith("#project")) { const e = c.substring(1); l(e), "project1" === e ? setTimeout(setupProject1Slider, 50) : "project14" !== e && "project15" !== e || setTimeout(initProjectCharts, 50), history.replaceState({ page: e }, "", c) } else { const e = c && "#" !== c ? c : "#about"; l("main-content", !1, e, !1), history.replaceState({ page: "main-content", targetSection: e }, "", "#about" === e ? " " : e) } o.forEach((e => { e.addEventListener("click", (() => { lastMainScrollPosition = window.scrollY; const t = history.state || {}; history.replaceState({ ...t, scrollY: lastMainScrollPosition }, "", window.location.hash); const o = e.dataset.page; l(o, !1, null, !1) })) })), n.forEach((e => { e.addEventListener("click", (t => { t.preventDefault(); const o = e.getAttribute("href"); "#portfolio" === o ? l("main-content", !1, null, !0) : l("main-content", !1, o, !1) })) })), r.forEach((e => { e.addEventListener("click", (t => { t.preventDefault(); const o = e.getAttribute("href"); l("main-content", !1, o, !1) })) })), window.addEventListener("popstate", (e => { const t = e.state && e.state.page ? e.state.page : "main-content"; l(t, !0), "project1" === t ? setTimeout(setupProject1Slider, 50) : "project14" !== t && "project15" !== t || setTimeout(initProjectCharts, 50) })); const d = document.querySelectorAll("#main-content section"), u = new IntersectionObserver((t => { if (!e.classList.contains("active")) return; let o = !1; t.forEach((e => { if (e.isIntersecting) { o = !0; const t = "#" + e.target.id; s(t) } })) }), { root: null, rootMargin: "0px", threshold: .4 }); d.forEach((e => { e.id && u.observe(e) })); const p = document.querySelectorAll(".filter-btn"), f = document.querySelectorAll(".portfolio-item"); p.forEach((e => { e.addEventListener("click", (() => { p.forEach((e => e.classList.remove("active"))), e.classList.add("active"); const t = e.dataset.filter; f.forEach((e => { e.style.display = "none", "all" !== t && e.dataset.category !== t || (e.style.display = "block") })) })) })) })), document.addEventListener("click", (function (e) { const t = e.target.closest("[data-open]"); if (t) { e.preventDefault(); const o = t.getAttribute("data-open"), n = document.getElementById(o); return void (n && (n.style.display = "flex", n.setAttribute("aria-hidden", "false"), document.body.style.overflow = "hidden")) } const o = e.target.closest("[data-close]"); if (o) { e.preventDefault(); const t = o.closest(".modal-backdrop"); return void (t && (t.style.display = "none", t.setAttribute("aria-hidden", "true"), document.body.style.overflow = "auto")) } if (e.target.classList.contains("modal-backdrop")) return e.target.style.display = "none", e.target.setAttribute("aria-hidden", "true"), void (document.body.style.overflow = "auto"); const n = e.target.closest(".p18-tab-btn"); if (n) { e.preventDefault(); const t = n.dataset.target, o = document.getElementById(t), a = n.closest(".p18-tabs"), r = a?.nextElementSibling; return a && a.querySelectorAll(".p18-tab-btn").forEach((e => { e.classList.remove("active") })), n.classList.add("active"), void (r && (r.querySelectorAll(".p18-tab-content").forEach((e => { e.style.display = "none" })), o && (o.style.display = "block"))) } })); let p14_revenueChartInstance = null, p14_trafficChartInstance = null, p15_revenueTrendChartInstance = null, p15_regionChartInstance = null, p15_targetChartInstance = null, p16_activityChartInstance = null; function getGoldenGradient(e) { if (!e) return "rgba(255, 215, 0, 0.1)"; const t = e.createLinearGradient(0, 0, 0, 400); return t.addColorStop(0, "rgba(255, 215, 0, 0.6)"), t.addColorStop(1, "rgba(255, 215, 0, 0.01)"), t } function initProjectCharts() { [p14_revenueChartInstance, p14_trafficChartInstance, p15_revenueTrendChartInstance, p15_regionChartInstance, p15_targetChartInstance, p16_activityChartInstance].forEach((e => { e && e.destroy() })); const e = document.getElementById("p14-revenueChart"); if (e) { const t = e.getContext("2d"); p14_revenueChartInstance = new Chart(t, { type: "line", data: { labels: ["Week 1", "Week 2", "Week 3", "Week 4", "Week 5", "Week 6"], datasets: [{ label: "Revenue", data: [52e3, 89432, 71e3, 110500, 92e3, 13e4], borderColor: "#FFD700", backgroundColor: getGoldenGradient(t), fill: !0, tension: .4, pointRadius: 0, pointHoverRadius: 6, pointHoverBackgroundColor: "#FFD700" }] }, options: { responsive: !0, maintainAspectRatio: !1, plugins: { legend: { display: !1 } }, scales: { x: { ticks: { color: "#9ca3af" }, grid: { color: "rgba(255, 215, 0, 0.1)" } }, y: { ticks: { color: "#9ca3af" }, grid: { color: "rgba(255, 215, 0, 0.1)" } } } } }) } const t = document.getElementById("p14-trafficChart"); t && (p14_trafficChartInstance = new Chart(t, { type: "doughnut", data: { labels: ["Organic", "Direct", "Referral"], datasets: [{ data: [50, 35, 15], backgroundColor: ["#FFD700", "#f0c400", "#fff3b0"], borderColor: "rgba(20, 20, 20, 0.6)", borderWidth: 4, hoverOffset: 10 }] }, options: { responsive: !0, maintainAspectRatio: !1, cutout: "70%", plugins: { legend: { position: "bottom", labels: { color: "#9ca3af", boxWidth: 12, padding: 20 } } } } })); const o = document.getElementById("p15-revenueTrendChart"); if (o) { const e = o.getContext("2d"); p15_revenueTrendChartInstance = new Chart(e, { type: "line", data: { labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul"], datasets: [{ label: "Revenue", data: [150, 180, 220, 200, 250, 230, 280], borderColor: "#FFD700", backgroundColor: getGoldenGradient(e), fill: !0, tension: .4, pointRadius: 0, pointHoverRadius: 6, pointHoverBackgroundColor: "#FFD700" }] }, options: { responsive: !0, maintainAspectRatio: !1, plugins: { legend: { display: !1 } }, scales: { x: { ticks: { color: "#9ca3af" }, grid: { color: "rgba(255, 215, 0, 0.1)" } }, y: { ticks: { color: "#9ca3af" }, grid: { color: "rgba(255, 215, 0, 0.1)" } } } } }) } const n = document.getElementById("p15-regionChart"); n && (p15_regionChartInstance = new Chart(n, { type: "doughnut", data: { labels: ["North America (35%)", "Europe (30%)", "APAC (25%)", "LATAM (10%)"], datasets: [{ data: [35, 30, 25, 10], backgroundColor: ["#FFD700", "#f0c400", "#fff3b0", "#FFEA8A"], borderColor: "rgba(20, 20, 20, 0.6)", borderWidth: 4, hoverOffset: 10 }] }, options: { responsive: !0, maintainAspectRatio: !1, cutout: "70%", plugins: { legend: { position: "bottom", labels: { color: "#9ca3af", boxWidth: 12, padding: 15, font: { size: 10 } } } } } })); const a = document.getElementById("p15-targetChart"); a && (p15_targetChartInstance = new Chart(a, { type: "doughnut", data: { labels: ["Completed", "Remaining"], datasets: [{ data: [84, 16], backgroundColor: ["#FFD700", "rgba(255, 215, 0, 0.2)"], borderColor: "rgba(20, 20, 20, 0.6)", borderWidth: 4, hoverOffset: 4 }] }, options: { responsive: !0, maintainAspectRatio: !1, cutout: "80%", plugins: { legend: { display: !1 }, tooltip: { enabled: !1 } } } })); const r = document.getElementById("p16-activityChart"); if (r) { const e = r.getContext("2d"); p16_activityChartInstance = new Chart(e, { type: "line", data: { labels: ["Wk 1", "Wk 2", "Wk 3", "Wk 4", "Wk 5", "Wk 6", "Wk 7", "Wk 8"], datasets: [{ label: "User Activity", data: [1200, 1800, 1500, 2100, 1700, 2300, 2e3, 2800], borderColor: "#FFD700", backgroundColor: getGoldenGradient(e), fill: !0, tension: .4, pointRadius: 0, pointHoverRadius: 6, pointHoverBackgroundColor: "#FFD700" }] }, options: { responsive: !0, maintainAspectRatio: !1, plugins: { legend: { display: !1 } }, scales: { x: { ticks: { color: "#9ca3af" }, grid: { display: !1 } }, y: { ticks: { color: "#9ca3af" }, grid: { color: "rgba(255, 215, 0, 0.1)" } } } } }) } } let project1SliderInterval = null; function setupProject1Slider() { const e = document.querySelector("#project1 .p1-slider-container"), t = document.querySelector("#project1 .p1-slider-wrapper"), o = document.querySelector("#project1 .p1-slider-prev"), n = document.querySelector("#project1 .p1-slider-next"), a = document.querySelector("#project1 .p1-slider-dots"); if (project1SliderInterval && clearInterval(project1SliderInterval), !(e && t && o && n && a)) return; const r = t.querySelectorAll(".p1-slide"); if (r.length <= 1) return o.style.display = "none", n.style.display = "none", void (a.style.display = "none"); o.style.display = "flex", n.style.display = "flex"; let i = 0, s = window.innerWidth >= 768 ? 2 : 1; const l = r.length; let c = Math.ceil(l / s), d = Math.max(0, c - 1); const u = 4e3; function p() { if (a.innerHTML = "", c = Math.ceil(l / s), d = Math.max(0, c - 1), c <= 1) a.style.display = "none"; else { a.style.display = "flex"; for (let e = 0; e < c; e++) { const t = document.createElement("button"); t.style.width = "8px", t.style.height = "8px", t.style.borderRadius = "50%", t.style.backgroundColor = "rgba(255, 215, 0, 0.3)", t.style.transition = "background-color 0.3s ease", t.setAttribute("aria-label", `Go to slide group ${e + 1}`), e === i && (t.style.backgroundColor = "#FFD700"), t.addEventListener("click", (() => { i = e, f(), m(), g() })), a.appendChild(t) } } } function f(o = !0) { if (!r || 0 === r.length) return; const n = r[0].offsetWidth; let c = -i * s * n; let u = -(t.scrollWidth - e.offsetWidth); e.offsetWidth > t.scrollWidth && (u = 0), c = Math.max(c, u), c = Math.min(c, 0), t.style.transition = o ? "transform 0.3s ease-in-out" : "none", t.style.transform = i === d && l % s != 0 && s > 1 ? `translateX(${u}px)` : `translateX(${c}px)`, a.querySelectorAll("button").forEach(((e, t) => { e.style.backgroundColor = t === i ? "#FFD700" : "rgba(255, 215, 0, 0.3)" })) } function h() { const e = s; if (s = window.innerWidth >= 768 ? 2 : 1, e !== s) { const t = i * e; i = Math.floor(t / s), p(), i = Math.min(i, d), f(!1) } else f(!1) } function v() { i < d ? i++ : i = 0, f() } function g() { project1SliderInterval && clearInterval(project1SliderInterval), c > 1 && (project1SliderInterval = setInterval(v, u)) } function m() { clearInterval(project1SliderInterval) } if (n.addEventListener("click", (() => { v(), m(), g() })), o.addEventListener("click", (() => { i > 0 ? i-- : i = d, f(), m(), g() })), e.addEventListener("mouseenter", m), e.addEventListener("mouseleave", g), "ResizeObserver" in window) { new ResizeObserver((() => { m(), h(), g() })).observe(e) } else window.addEventListener("resize", (() => { m(), h(), g() })); p(), h(), g() }